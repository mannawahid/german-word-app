import streamlit as st
from gtts import gTTS
import io
import pandas as pd
import random
import time

# === Vocabulary Database ===
word_bank = {
    "A1.1": {
        "sein": {"bangla": "рж╣ржУржпрж╝рж╛", "sentence_de": "Ich bin Student.", "sentence_bn": "ржЖржорж┐ ржПржХржЬржи ржЫрж╛рждрзНрж░ред"},
        "haben": {"bangla": "ржерж╛ржХрж╛ / ржерж╛ржХрж╛ ржЖржЫрзЗ", "sentence_de": "Ich habe ein Buch.", "sentence_bn": "ржЖржорж╛рж░ ржПржХржЯрж┐ ржмржЗ ржЖржЫрзЗред"},
        "kommen": {"bangla": "ржЖрж╕рж╛", "sentence_de": "Ich komme aus Bangladesch.", "sentence_bn": "ржЖржорж┐ ржмрж╛ржВрж▓рж╛ржжрзЗрж╢ ржерзЗржХрзЗ ржЖрж╕рж┐ред"},
        "gehen": {"bangla": "ржпрж╛ржУржпрж╝рж╛", "sentence_de": "Ich gehe zur Arbeit.", "sentence_bn": "ржЖржорж┐ ржХрж╛ржЬрзЗ ржпрж╛ржЪрзНржЫрж┐ред"},
        "machen": {"bangla": "ржХрж░рж╛", "sentence_de": "Was machst du?", "sentence_bn": "рждрзБржорж┐ ржХрзА ржХрж░ржЫрзЛ?"},
        "lernen": {"bangla": "рж╢рзЗржЦрж╛", "sentence_de": "Ich lerne Deutsch.", "sentence_bn": "ржЖржорж┐ ржЬрж╛рж░рзНржорж╛ржи рж╢рж┐ржЦржЫрж┐ред"},
        "sprechen": {"bangla": "ржХржерж╛ ржмрж▓рж╛", "sentence_de": "Sie spricht gut Englisch.", "sentence_bn": "рж╕рзЗ ржнрж╛рж▓рзЛ ржЗржВрж░рзЗржЬрж┐ ржмрж▓рзЗред"},
        "wohnen": {"bangla": "ржмрж╛рж╕ ржХрж░рж╛ / ржерж╛ржХрж╛", "sentence_de": "Ich wohne in Bremen.", "sentence_bn": "ржЖржорж┐ ржмрзНрж░рзЗржорзЗржирзЗ ржерж╛ржХрж┐ред"},
        "essen": {"bangla": "ржЦрж╛ржУржпрж╝рж╛", "sentence_de": "Ich esse einen Apfel.", "sentence_bn": "ржЖржорж┐ ржПржХржЯрж┐ ржЖржкрзЗрж▓ ржЦрж╛ржЪрзНржЫрж┐ред"},
        "trinken": {"bangla": "ржкрж╛ржи ржХрж░рж╛", "sentence_de": "Er trinkt Wasser.", "sentence_bn": "рж╕рзЗ ржкрж╛ржирж┐ ржкрж╛ржи ржХрж░рзЗред"},
        "lesen": {"bangla": "ржкрзЬрж╛", "sentence_de": "Ich lese ein Buch.", "sentence_bn": "ржЖржорж┐ ржПржХржЯрж┐ ржмржЗ ржкрзЬржЫрж┐ред"},
        "h├╢ren": {"bangla": "рж╢рзЛржирж╛", "sentence_de": "Wir h├╢ren Musik.", "sentence_bn": "ржЖржорж░рж╛ ржЧрж╛ржи рж╢рзБржирж┐ред"},
        "sehen": {"bangla": "ржжрзЗржЦрж╛", "sentence_de": "Ich sehe einen Film.", "sentence_bn": "ржЖржорж┐ ржПржХржЯрж┐ рж╕рж┐ржирзЗржорж╛ ржжрзЗржЦрж┐ред"},
        "schreiben": {"bangla": "рж▓рзЗржЦрж╛", "sentence_de": "Ich schreibe einen Brief.", "sentence_bn": "ржЖржорж┐ ржПржХржЯрж┐ ржЪрж┐ржарж┐ рж▓рж┐ржЦржЫрж┐ред"},
        "arbeiten": {"bangla": "ржХрж╛ржЬ ржХрж░рж╛", "sentence_de": "Mein Vater arbeitet im B├╝ro.", "sentence_bn": "ржЖржорж╛рж░ ржмрж╛ржмрж╛ ржЕржлрж┐рж╕рзЗ ржХрж╛ржЬ ржХрж░рзЗржиред"},
        "spielen": {"bangla": "ржЦрзЗрж▓рж╛ / ржмрж╛ржЬрж╛ржирзЛ", "sentence_de": "Die Kinder spielen Fu├Яball.", "sentence_bn": "ржЫрзЗрж▓рзЗрж░рж╛ ржлрзБржЯржмрж▓ ржЦрзЗрж▓рзЗред"},
        "finden": {"bangla": "ржЦрзБржБржЬрзЗ ржкрж╛ржУрзЯрж╛ / ржоржирзЗ ржХрж░рж╛", "sentence_de": "Ich finde das Buch interessant.", "sentence_bn": "ржЖржорж┐ ржмржЗржЯрж┐ ржЖржХрж░рзНрж╖ржгрзАржпрж╝ ржоржирзЗ ржХрж░рж┐ред"},
        "m├╢gen": {"bangla": "ржкржЫржирзНржж ржХрж░рж╛", "sentence_de": "Ich mag Schokolade.", "sentence_bn": "ржЖржорж┐ ржЪржХрзЛрж▓рзЗржЯ ржкржЫржирзНржж ржХрж░рж┐ред"},
        "kaufen": {"bangla": "ржХрзЗржирж╛", "sentence_de": "Ich kaufe Brot und Milch.", "sentence_bn": "ржЖржорж┐ рж░рзБржЯрж┐ ржПржмржВ ржжрзБржз ржХрж┐ржирж┐ред"},
        "brauchen": {"bangla": "ржкрзНрж░ржпрж╝рзЛржЬржи рж╣ржУржпрж╝рж╛", "sentence_de": "Ich brauche Hilfe.", "sentence_bn": "ржЖржорж╛рж░ рж╕рж╛рж╣рж╛ржпрзНржп ржжрж░ржХрж╛рж░ред"},
        "nehmen": {"bangla": "ржирзЗржУржпрж╝рж╛", "sentence_de": "Ich nehme den Bus.", "sentence_bn": "ржЖржорж┐ ржмрж╛рж╕рзЗ ржпрж╛ржЗред"},
        "geben": {"bangla": "ржжрзЗржУржпрж╝рж╛", "sentence_de": "Kannst du mir das Buch geben?", "sentence_bn": "рждрзБржорж┐ ржХрж┐ ржЖржорж╛ржХрзЗ ржмржЗржЯрж╛ ржжрж┐рждрзЗ ржкрж╛рж░рзЛ?"},
        "fragen": {"bangla": "ржкрзНрж░рж╢рзНржи ржХрж░рж╛", "sentence_de": "Ich frage den Lehrer.", "sentence_bn": "ржЖржорж┐ рж╢рж┐ржХрзНрж╖ржХрзЗрж░ ржХрж╛ржЫрзЗ ржкрзНрж░рж╢рзНржи ржХрж░рж┐ред"},
        "antworten": {"bangla": "ржЙрждрзНрждрж░ ржжрзЗржУржпрж╝рж╛", "sentence_de": "Der Sch├╝ler antwortet richtig.", "sentence_bn": "ржЫрж╛рждрзНрж░ржЯрж┐ рж╕ржарж┐ржХ ржЙрждрзНрждрж░ ржжрзЗржпрж╝ред"},
        "helfen": {"bangla": "рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рж╛", "sentence_de": "Kannst du mir helfen?", "sentence_bn": "рждрзБржорж┐ ржХрж┐ ржЖржорж╛ржХрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рждрзЗ ржкрж╛рж░рзЛ?"},
        "bleiben": {"bangla": "ржерж╛ржХрж╛ / ржЕржмрж╕рзНржерж╛ржи ржХрж░рж╛", "sentence_de": "Ich bleibe zu Hause.", "sentence_bn": "ржЖржорж┐ ржмрж╛ржбрж╝рж┐рждрзЗ ржерж╛ржХрж┐ред"},
        "stehen": {"bangla": "ржжрж╛ржБржбрж╝рж╛ржирзЛ", "sentence_de": "Er steht vor der T├╝r.", "sentence_bn": "рж╕рзЗ ржжрж░ржЬрж╛рж░ рж╕рж╛ржоржирзЗ ржжрж╛ржБржбрж╝рж┐ржпрж╝рзЗ ржЖржЫрзЗред"},
        "sitzen": {"bangla": "ржмрж╕рж╛", "sentence_de": "Wir sitzen im Park.", "sentence_bn": "ржЖржорж░рж╛ ржкрж╛рж░рзНржХрзЗ ржмрж╕рзЗ ржЖржЫрж┐ред"},
        "laufen": {"bangla": "ржжрзМрзЬрж╛ржирзЛ / рж╣рж╛ржБржЯрж╛", "sentence_de": "Das Kind l├дuft schnell.", "sentence_bn": "ржмрж╛ржЪрзНржЪрж╛ржЯрж┐ ржжрзНрж░рзБржд ржжрзМрзЬрж╛ржЪрзНржЫрзЗред"},
    }
}

# === Streamlit UI Config ===
st.set_page_config(page_title="Deutsch Lernen A1.1", page_icon="ЁЯЗйЁЯЗк", layout="wide")
st.title("ЁЯР░ Deutsch Lernen ЁЯЗйЁЯЗк тАФ A1.1 Vocabulary + Quiz")
st.caption("Learn German Words (with Audio) and Practice with Quizzes ЁЯОп")

# === Sidebar Menu ===
menu = st.sidebar.radio("ЁЯУЪ Menu", ["ЁЯПа Home", "ЁЯУЦ Vocabulary", "ЁЯОп Quiz Game"])

# === ЁЯПа HOME ===
if menu == "ЁЯПа Home":
    st.header("ЁЯОп Willkommen zur Deutsch Lern-App!")
    st.markdown("""
    ЁЯСЙ **ржПржЗ ржЕрзНржпрж╛ржкрзЗ рждрзБржорж┐ рж╢рж┐ржЦрждрзЗ ржкрж╛рж░ржмрзЗ:**
    - ЁЯЗйЁЯЗк ржЬрж╛рж░рзНржорж╛ржи рж╢ржмрзНржж ржУ ржЕрж░рзНрже  
    - ЁЯФК рж╢ржмрзНржж ржУ ржмрж╛ржХрзНржпрзЗрж░ ржирзЗржЯрж┐ржн ржЙржЪрзНржЪрж╛рж░ржг  
    - ЁЯОп Bangla тЖТ German ржХрзБржЗржЬ ржЧрзЗржо  
    - ЁЯР░ рж▓рзЗржнрзЗрж▓ржнрж┐рждрзНрждрж┐ржХ рж╕рзНржХрзЛрж░ ржУ ржЕржЧрзНрж░ржЧрждрж┐  

    ЁЯУШ **Level:** A1.1 (Beginner)
    """)
    st.image("https://media.tenor.com/POOQOjE2aYcAAAAi/bunny-hello.gif", width=200)

# === ЁЯУЦ VOCABULARY ===
elif menu == "ЁЯУЦ Vocabulary":
    st.header("ЁЯУШ A1.1 Vocabulary with Pronunciation ЁЯФК")
    level = "A1.1"
    words = word_bank[level]

    for word, info in words.items():
        st.markdown(f"### ЁЯЗйЁЯЗк {word} тАФ ЁЯЗзЁЯЗй {info['bangla']}")
        st.write(f"ЁЯЧгя╕П *{info['sentence_de']}*")
        st.write(f"ЁЯЧия╕П {info['sentence_bn']}")

        col1, col2 = st.columns([1, 3])
        with col1:
            if st.button(f"ЁЯФК Word", key=f"word_{word}"):
                tts = gTTS(text=word, lang='de')
                mp3_fp = io.BytesIO()
                tts.write_to_fp(mp3_fp)
                st.audio(mp3_fp.getvalue(), format="audio/mp3")
        with col2:
            if st.button(f"ЁЯОз Sentence", key=f"sent_{word}"):
                tts = gTTS(text=info["sentence_de"], lang='de')
                mp3_fp = io.BytesIO()
                tts.write_to_fp(mp3_fp)
                st.audio(mp3_fp.getvalue(), format="audio/mp3")
        st.markdown("---")

# === ЁЯОп QUIZ GAME ===
elif menu == "ЁЯОп Quiz Game":
    st.header("ЁЯОо Bangla тЖТ German Quiz (A1.1 Level)")
    all_words = word_bank["A1.1"]

    # === Initialize Session ===
    if "level" not in st.session_state:
        st.session_state.level = 1
        st.session_state.score = 0
        st.session_state.correct = 0
        st.session_state.wrong = 0
        st.session_state.used_words = set()
        st.session_state.retry_words = []
        st.session_state.results = []
        st.session_state.current_questions = []
        st.session_state.current_index = 0

    # === Helper ===
    def level_target(level):
        return 2 + level

    def load_next_level():
        remaining = [(g, v) for g, v in all_words.items() if g not in st.session_state.used_words]
        new_set = st.session_state.retry_words.copy()
        st.session_state.retry_words = []
        need = level_target(st.session_state.level)
        fresh = [item for item in remaining if item not in new_set]
        random.shuffle(fresh)
        new_set.extend(fresh[:max(0, need - len(new_set))])
        st.session_state.current_questions = new_set
        st.session_state.current_index = 0

    # === Load first level ===
    if not st.session_state.current_questions:
        load_next_level()

    # === Quiz Body ===
    if st.session_state.current_index < len(st.session_state.current_questions):
        german, info = st.session_state.current_questions[st.session_state.current_index]
        bangla = info["bangla"]

        st.markdown(f"### ЁЯОп Level {st.session_state.level}")
        st.info(f"Question {st.session_state.current_index + 1}/{len(st.session_state.current_questions)}")
        st.markdown(f"**'{bangla}' рж╢ржмрзНржжржЯрж┐рж░ ржЬрж╛рж░рзНржорж╛ржи ржЕржирзБржмрж╛ржж рж▓рж┐ржЦрзЛ:**")

        ans = st.text_input("тЬНя╕П Your German Answer:", key=f"ans_{st.session_state.level}_{st.session_state.current_index}")

        col1, col2 = st.columns(2)
        with col1:
            if st.button("тЬЕ Submit"):
                correct_ans = german.strip().lower()
                is_correct = ans.strip().lower() == correct_ans

                if is_correct:
                    st.success("тЬЕ Correct! Great Job!")
                    st.image("https://media.tenor.com/5nZqVYpE6m4AAAAi/cute-rabbit-thumbs-up.gif")
                    st.session_state.score += 10
                    st.session_state.correct += 1
                    st.session_state.used_words.add(german)
                else:
                    st.error(f"тЭМ Wrong! Correct: {german}")
                    st.image("https://media.tenor.com/bTFeixbXb2kAAAAi/sad-rabbit-no.gif")
                    st.session_state.retry_words.append((german, info))
                    st.session_state.wrong += 1

                st.session_state.results.append({
                    "Level": st.session_state.level,
                    "Bangla": bangla,
                    "Your Answer": ans if ans else "тАФ",
                    "Correct German": german,
                    "Result": "тЬЕ" if is_correct else "тЭМ"
                })
                st.session_state.current_index += 1
                st.rerun()

        with col2:
            if st.button("тПня╕П Skip"):
                st.session_state.retry_words.append((german, info))
                st.session_state.results.append({
                    "Level": st.session_state.level,
                    "Bangla": bangla,
                    "Your Answer": "Skipped",
                    "Correct German": german,
                    "Result": "тЭМ"
                })
                st.session_state.wrong += 1
                st.session_state.current_index += 1
                st.rerun()

    else:
        st.success(f"ЁЯОЙ Level {st.session_state.level} Complete!")
        df = pd.DataFrame([r for r in st.session_state.results if r["Level"] == st.session_state.level])
        st.dataframe(df)
        remaining = len(all_words) - len(st.session_state.used_words)
        if st.session_state.retry_words or remaining > 0:
            next_level = st.session_state.level + 1
            if st.button(f"ЁЯЪА Start Level {next_level} ({level_target(next_level)} questions)"):
                st.session_state.level = next_level
                load_next_level()
                st.rerun()
        else:
            st.balloons()
            st.success("ЁЯПБ All Words Mastered! ЁЯОУ")
            st.dataframe(pd.DataFrame(st.session_state.results))
            if st.button("ЁЯФБ Restart Game"):
                for k in list(st.session_state.keys()):
                    del st.session_state[k]
                st.rerun()
